@page "/"
@inject IJSRuntime JS
<!-- This page is intended for conversational Q&A. -->

<PageTitle>Chat</PageTitle>
<!-- Top Section (Fixed Height) -->
<div>
</div>

<!-- Middle Section (Fills Remaining Space) -->
<div id="answerSection" style="flex-grow: 1; overflow-y: auto; padding: 15px">
    <MudGrid Justify="Justify.Center">
        <MudItem id="answers" xs="12" Class="overflow-x-auto">
            @if (_questionAndAnswerMap is { Count: 0 })
            {
                <div class="d-flex align-content-center flex-wrap flex-grow-1 full-height">
                    <Examples Profile=@_selectedProfileSummary Message="@AppConfiguration.HelloText" OnExampleClicked="@OnAskQuestionAsync" />
                </div>
            }
            else
            {
                <MudStack Reverse="@IsReversed" Spacing="12">
                    @foreach (var ((question, askedOn), answer) in _questionAndAnswerMap)
                    {
                        <MudStack Justify="Justify.Center" AlignItems="AlignItems.Start" Spacing="4">
                            <MudBadge Origin="Origin.TopLeft" Overlap="true" Color="Color.Secondary" Icon="@Icons.Material.Filled.QuestionMark" Class="d-flex align-self-end">
                                <MudPaper Class="pa-6 d-flex flex-column" Elevation="3">
                                    <MudText Typo="Typo.body1" Align="Align.End">@question</MudText>
                                        <MudText Typo="Typo.caption" Align="Align.End" Color="Color.Secondary">
                                            @($"Asked at {askedOn:h:mm:ss tt} on {askedOn:M/dd/yy}")
                                        </MudText>
                                    </MudPaper>
                                </MudBadge>
                                <div class="ten-twelves">
                                    @if (answer is null)
                                    {
                                        <MudBadge Origin="Origin.TopLeft" Overlap="true" Color="Color.Secondary" Icon="@Icons.Material.Filled.Lightbulb" Class="full-width">
                                            <MudPaper Class="pa-6" Elevation="3">
                                                <Loading />
                                            </MudPaper>
                                        </MudBadge>
                                    }
                                    else if (answer is { Error.Length: > 0 })
                                    {
                                        <MudBadge Origin="Origin.TopLeft" Overlap="true" Color="Color.Error" Icon="@Icons.Material.Filled.Error">
                                            <AnswerError Error="@answer" Question="@question" OnRetryClicked="@OnAskQuestionAsync" />
                                        </MudBadge>
                                    }
                                    else
                                    {
                                        <MudBadge Origin="Origin.TopLeft" Overlap="true" Color="Color.Secondary" Icon="@Icons.Material.Filled.AutoAwesome">
                                            <Answer Retort="@answer" FollowupQuestionClicked="@OnAskQuestionAsync" />
                                        </MudBadge>
                                    }
                            </div>
                        </MudStack>
                    }
                </MudStack>
            }
        </MudItem>
    </MudGrid>
</div>

<!-- Bottom Section (Fixed Height) -->
<div style="height: 125px;">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" Class="rounded">
            <MudGrid>
                 <MudItem xs="12" lg="12">
  
    

                    @if (_profiles.Count() > 1)
                    {
                        <MudMenu Class="" Label="@_selectedProfile" Variant="Variant.Outlined" Color="Color.Primary" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" FullWidth="true">
                            <ChildContent>
                                @foreach (var profile in _profiles)
                                {
                                    <MudMenuItem OnClick="@(e => OnProfileClick(@profile.Name))">@profile.Name</MudMenuItem>
                                }
                            </ChildContent>
                        </MudMenu>
                    }
                    @if (AppConfiguration.ShowFileUploadSelection)
                    { 
                        <MudIconButton Icon="@Icons.Material.Filled.AttachFile" Variant="Variant.Outlined" Color="Color.Primary" OnClick="ToggleFileUpload" />
                        @if (_showFileUpload)
                        {
                            <MudForm @ref="@_form">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Typo="Typo.h5">Upload Documents</MudText>
                                    </CardHeaderContent>
                                    <CardHeaderActions>
                                        <MudIconButton Icon="@Icons.Material.Filled.CloudUpload" Size="Size.Large" Color="Color.Default" />
                                    </CardHeaderActions>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudText Class="pb-4">
                                        Select up to ten documents to upload, or explore the existing documents that have already been processed.
                                        The document can be either a PDF file or an image file.
                                        Each file cannot exceed a file size of @(MaxIndividualFileSize.ToHumanReadableSize())
                                    </MudText>
                                    <MudFileUpload @ref="_fileUpload" T="IReadOnlyList<IBrowserFile>" Accept=".pdf" MaximumFileCount="10" FilesChanged=@(files => StateHasChanged()) Required="true" RequiredError="You must select at least one file to upload.">
                                        <ButtonTemplate>
                                            <MudButton HtmlTag="label" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.FileOpen" Size="Size.Large" for="@context">
                                                Select Documents
                                            </MudButton>
                                        </ButtonTemplate>
                                        <SelectedTemplate>
                                            <MudExpansionPanels Class="pt-4" Elevation=2>
                                                @{
                                                    var enabled = context is { Count: > 0 };
                                                    var size = enabled ? context.Sum(f => f.Size) : 0;
                                                }
                                                <MudExpansionPanel Disabled="@(enabled is false)">
                                                    <TitleContent>
                                                        <div class="d-flex">
                                                            <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-3" Size="Size.Medium"></MudIcon>
                                                            @if (enabled)
                                                            {
                                                                <MudText>
                                                                    Selected @(context.Count) file(s): <MudChip Size="Size.Small">@(size.ToHumanReadableSize())</MudChip>
                                                                </MudText>
                                                            }
                                                            else
                                                            {
                                                                <MudText>No files selected.</MudText>
                                                            }
                                                        </div>
                                                    </TitleContent>
                                                    <ChildContent>
                                                        <MudList>
                                                            @foreach (var file in context ?? new List<IBrowserFile>())
                                                            {
                                                                <MudListItem IconColor="Color.Error" @key="@file" Icon="@Icons.Material.Filled.PictureAsPdf">
                                                                    @file.Name <MudChip Size="Size.Small">@file.Size.ToHumanReadableSize()</MudChip>
                                                                </MudListItem>
                                                            }
                                                        </MudList>
                                                    </ChildContent>
                                                </MudExpansionPanel>
                                            </MudExpansionPanels>
                                        </SelectedTemplate>
                                    </MudFileUpload>
                                </MudCardContent>
                                <MudCardActions>
                                    <MudButton StartIcon="@Icons.Material.Filled.Clear" Variant="Variant.Filled"
                                               Color="Color.Error"
                                               Size="Size.Large" Class="ml-2 mb-2"
                                               OnClick="@(async () => await _fileUpload.ResetAsync())">
                                        Clear Selected Documents
                                    </MudButton>
                                    <MudButton StartIcon="@Icons.Material.Filled.Upload"
                                               Variant="Variant.Filled"
                                               Color="Color.Primary"
                                               Size="Size.Large" Class="ml-auto mr-2 mb-2"
                                               OnClick="@(async _ => await SubmitFilesForUploadAsync())">
                                        Upload File(s)
                                    </MudButton>
                                </MudCardActions>
                            </MudForm>
                        }
                    }
                </MudItem>
                <MudItem xs="12" lg="10">
                    <VoiceTextInput @bind-Value="_userQuestion" Label="Prompt"
                                    Icon="@Icons.Material.Filled.QuestionAnswer"
                                    Placeholder="Enter OpenAI + Azure Search prompt"
                                    HelperText="Use Shift + Enter for new lines."
                                    Disabled=@_isReceivingResponse
                                    OnEnterKeyPressed="OnAskClickedAsync" />
                </MudItem>
                <MudItem xs="0" lg="2" Class="d-flex align-self-center">
                    <MudGrid Justify="Justify.Center">

                        @if (AppConfiguration.ShowPremiumAOAIToggleSelection)
                        {
                            <MudItem xs="12">
                                <MudToggleIconButton @bind-Toggled="@_gPT4ON" Icon="@Icons.Material.Filled.ToggleOff" Color="@Color.Default" Title="Off" ToggledIcon="@Icons.Material.Filled.ToggleOn" ToggledColor="@Color.Success" ToggledTitle="On" />
                                <span>GPT-4</span>
                            </MudItem>
                        }  
                        <MudItem xs="9" Class="pa-2">
                            <MudFab Color="Color.Secondary" Size="Size.Large"
                                    StartIcon=@Icons.Material.Filled.Send Class="full-width"
                                    Label="Chat" aria-label="Ask question button."
                                    OnClick="@OnAskClickedAsync"
                                    Disabled=@(_isReceivingResponse || string.IsNullOrWhiteSpace(_userQuestion)) />
                        </MudItem>
                        <MudItem xs="3" Class="pa-2">
                            <MudTooltip Arrow="true" Text="Reset chat" Placement="Placement.Top">
                                <MudFab Color="Color.Error" Size="Size.Medium" StartIcon=@Icons.Material.Filled.DeleteForever aria-label="Clear chat." OnClick="@OnClearChat" Disabled=@(_isReceivingResponse) />
                            </MudTooltip>
                        </MudItem>

                    </MudGrid>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudGrid>
</div>

<style>
    .select-group .mud-list-item-icon   { display: none; }
    .select-group .mud-list-item-text p { color: var(--mud-palette-text-primary);
                                          font-weight: 500; }
</style>